# frozen_string_literal: true
require_relative '../test_helper'

SingleCov.covered! unless defined?(Rake) # rake preloads all plugins

describe SamsonDockerb do
  let(:stage) { stages(:test_staging) }

  describe :after_deploy_setup do
    def fire
      job = stub(deploy: stub(stage: stage), project: stage.project)
      Samson::Hooks.fire(:after_deploy_setup, "repo", job, StringIO.new, 'abc')
    end

    run_inside_of_temp_directory

    before do
      FileUtils.mkdir("repo")
      File.write("repo/Dockerfile.erb", '<%= 1111 %>')
    end

    it "generates a Dockerfile" do
      fire
      File.read('repo/Dockerfile').must_equal(
        "# Generated by dockerb #{Dockerb::VERSION}, do not modify\n1111\n" \
        "# Generated by dockerb #{Dockerb::VERSION}, do not modify\n"
      )
    end

    it "does nothing when Dockerfile exists" do
      File.write("repo/Dockerfile", '222')
      fire
      File.read('repo/Dockerfile').must_equal "222"
    end

    it "does not report to airbrake when it fails" do
      File.write("repo/Dockerfile.erb", '<% raise %>')
      assert_raises Samson::Hooks::UserError do
        fire
      end
    end
  end
end
