<fieldset>
  <div class="form-group">
    <%= form.label :parent_id, "Parent Stage", class: "col-lg-2 control-label" %>
    <div class="col-lg-4">
      <%= form.select :parent_id, parent_stage_options, { include_blank: "(root stage)" }, class: "form-control" %>
    </div>
  </div>

  <div class="form-group">
    <%= form.label :name, "Name", class: "col-lg-2 control-label" %>
    <div class="col-lg-4">
      <%= form.text_field :name, class: "form-control" %>
    </div>
  </div>

  <% if form.object.persisted? %>
    <div class="form-group">
      <%= form.label :permalink, "Permalink", class: "col-lg-2 control-label" %>
      <div class="col-lg-4">
        <%= form.text_field :permalink, class: "form-control" %>
      </div>
    </div>
  <% end %>

  <div class="form-group">
    <%= form.label :notify_email_address, "Email addresses", class: "col-lg-2 control-label" %>
    <div class="col-lg-4">
      <%= form.text_field :notify_email_address, class: "form-control" %>
      <span class="help-block">Enter the email addresses that should be notified of new deploys, separated by <code>;</code></span>
    </div>
  </div>

  <div class="form-group">
    <div class="col-sm-offset-2 col-sm-10">
      <div class="checkbox">
        <%= form.label :confirm do %>
          <%= form.check_box :confirm %>
          Confirm before deployment
        <% end %>
      </div>
    </div>
  </div>

  <div class="form-group">
    <div class="col-sm-offset-2 col-sm-10">
      <div class="checkbox">
        <%= form.label :production do %>
          <%= form.check_box :production %>
          Does this stage impact production servers?
        <% end %>
      </div>
    </div>
  </div>

  <% if @project.manage_releases? %>
    <div class="form-group">
      <div class="col-sm-offset-2 col-sm-10">
        <div class="checkbox">
          <%= form.label :deploy_on_release do %>
            <%= form.check_box :deploy_on_release %>
            Automatically deploy new releases
          <% end %>
        </div>
      </div>
    </div>
  <% end %>
</fieldset>

<% if @stage.persisted? && @stage.has_children? %>
  <fieldset>
    <legend>Nested Stages</legend>
    <p>Select the options for how you would like nested stages to run.</p>
    <%= form.fields_for :nested_stages do |nested_stage_fields| %>
      <div class="form-group">
        <%= form.label :nested_stages_type, "Deploy Type", class: "col-lg-2 control-label" %>
        <div class="col-sm-10">
          <div class="radio">
            <%= form.label :nested_stages_type_sequential do %>
              <%= form.radio_button :nested_stages_type, :sequential %>
              Sequential
            <% end %>
          </div>
          <div class="help-block">Deploy nested stages one after another</div>
          <div class="radio">
            <%= form.label :nested_stages_type_parallel do %>
              <%= form.radio_button :nested_stages_type, :parallel %>
              Parallel
            <% end %>
          </div>
          <div class="help-block">Deploy all nested stages at once</div>
          <div class="radio">
            <%= form.label :nested_stages_type_sequential do %>
              <%= form.radio_button :nested_stages_type, :manual %>
              Manual
            <% end %>
          </div>
          <div class="help-block">Queue up nested stages for manually started deploys</div>
        </div>
      </div>
      <div class="form-group">
        <%= form.label :nested_stages_failure, "Failure Handling Type", class: "col-lg-2 control-label" %>
        <div class="col-sm-10">
          <div class="radio">
            <%= form.label :nested_stages_failure_continue do %>
              <%= form.radio_button :nested_stages_failure, :continue %>
              Continue
            <% end %>
          </div>
          <div class="help-block">Continue deploying to other nested stages on failure</div>
          <div class="radio">
            <%= form.label :nested_stages_failure_abort do %>
              <%= form.radio_button :nested_stages_failure, :abort %>
              Abort
            <% end %>
          </div>
          <div class="help-block">Abort on failure</div>
        </div>
      </div>
      <div class="form-group">
        <%= form.label :nested_stages_buddy, "Buddy Approval", class: "col-lg-2 control-label" %>
        <div class="col-sm-10">
          <div class="checkbox">
            <%= form.label :nested_stages_buddy do %>
              <%= form.check_box :nested_stages_buddy %>
              Require buddy approval for each nested stage
            <% end %>
          </div>
        </div>
      </div>
    <% end %>
  </fieldset>
<% end %>

<fieldset>
  <legend>Commands</legend>
  <p>Select the commands you want to run when executing this stage. Double click to edit commands.</p>

  <div id="commands">
    <%= form.collection_check_boxes(:command_ids, form.object.before_nested_commands, :id, :command) do |b| %>
      <div class="row stage-bar bar">
        <div data-id="<%= b.value %>" class="col-lg-offset-2 col-lg-2 command-checkbox">
          <%= b.check_box %>
        </div>
        <div class="col-lg-8">
          <pre data-type="textarea" data-url="<%= admin_command_path(b.value, format: :json) %>" class="pre-command pre-inline <%= b.object.global? ? 'global' : 'local' %>"><%= b.text %></pre>
        </div>
        <%= edit_command_link(b.object) %>
      </div>
    <% end %>
    <div class="ui-state-disabled">
      <% @stage.nested_stage_commands.each do |command| %>
      <div class="row stage-bar bar">
        <div class="col-lg-offset-2 col-lg-2 command-checkbox">
          <input checked="checked" name="stage[command_ids][]" type="checkbox" value="-1" />
        </div>
        <div class="col-lg-8">
          <pre class="pre-command pre-inline"><%= command.command %></pre>
        </div>
        <%= link_to "", edit_project_stage_path(@project, command.stage), title: "Edit Stage", class: "edit-command glyphicon glyphicon-edit" %>
      </div>
      <% end %>
    </div>
    <%= form.collection_check_boxes(:command_ids, form.object.after_nested_commands, :id, :command) do |b| %>
      <div class="row stage-bar bar">
        <div data-id="<%= b.value %>" class="col-lg-offset-2 col-lg-2 command-checkbox">
          <%= b.check_box %>
        </div>
        <div class="col-lg-8">
          <pre data-type="textarea" data-url="<%= admin_command_path(b.value, format: :json) %>" class="pre-command pre-inline <%= b.object.global? ? 'global' : 'local' %>"><%= b.text %></pre>
        </div>
        <%= edit_command_link(b.object) %>
      </div>
    <% end %>
    <%= form.collection_check_boxes(:command_ids, form.object.other_commands, :id, :command) do |b| %>
      <div class="row stage-bar bar">
        <div data-id="<%= b.value %>" class="col-lg-offset-2 col-lg-2 command-checkbox">
          <%= b.check_box %>
        </div>
        <div class="col-lg-8">
          <pre data-type="textarea" data-url="<%= admin_command_path(b.value, format: :json) %>" class="pre-command pre-inline <%= b.object.global? ? 'global' : 'local' %>"><%= b.text %></pre>
        </div>
        <%= edit_command_link(b.object) %>
      </div>
    <% end %>
  </div>

  <hr />

  <p>Add a command which is specific to your project</p>
  <%= form.text_area :command, class: "form-control", rows: 4, value: nil, placeholder: 'cap production deploy' %>
</fieldset>

<fieldset>
  <legend>Flowdock</legend>
  <p>Add the name and API token of the Flowdock flow which should be notified of deploys.</p>

  <%= form.fields_for :flowdock_flows do |flow_fields| %>
    <div class="form-group">
      <div class="col-lg-2 col-lg-offset-2">
        <%= flow_fields.text_field :name, class: "form-control", placeholder: "Flow name" %>
      </div>

      <div class="col-lg-4">
        <%= flow_fields.text_field :token, class: "form-control", placeholder: "Token" %>
      </div>

      <% if flow_fields.object.persisted? %>
        <div class="col-lg-1 checkbox">
          <%= flow_fields.check_box :_destroy if flow_fields.object.persisted? %>
          <%= flow_fields.label :_destroy, "Delete" %>
        </div>
      <% end %>
    </div>
  <% end %>
</fieldset>

<fieldset>
  <legend>New Relic</legend>
  <p>Add the name of New Relic Applications that you would like to keep of during this stages' deploys.</p>

  <%= form.fields_for :new_relic_applications do |app_fields| %>
    <div class="form-group">
      <div class="col-lg-6 col-lg-offset-2">
        <%= app_fields.text_field :name, class: "form-control", placeholder: "Application name" %>
      </div>

      <% if app_fields.object.persisted? %>
        <div class="col-lg-1 checkbox">
          <%= app_fields.check_box :_destroy if app_fields.object.persisted? %>
          <%= app_fields.label :_destroy, "Delete" %>
        </div>
      <% end %>
    </div>
  <% end %>
</fieldset>

<fieldset>
  <legend>Datadog</legend>
  <p>Add the tags that should be used when notifying Datadog of deploys. Leave empty if you don't want
  to send notifications to Datadog.</p>

  <div class="form-group">
    <div class="col-lg-6 col-lg-offset-2">
      <%= form.text_field :datadog_tags, class: "form-control", placeholder: "Datadog tags" %>
      <span class="help-block">Enter the tags that should be used on deploy events, separated by <code>;</code></span>
    </div>
  </div>
</fieldset>

<fieldset>
  <legend>Github</legend>
  <div class="col-lg-6 checkbox">
    <%= form.label :update_github_pull_requests do %>
      <%= form.check_box :update_github_pull_requests %>
      Update Pull Request after deployment
    <% end %>
  </div>
  <div class="col-lg-6 checkbox">
    <%= form.label :use_github_deployment_api do %>
      <%= form.check_box :use_github_deployment_api %>
      Use GitHub Deployment API [beta]
    <% end %>
  </div>
</fieldset>

<script>
  $(document).ready(function() {
    $('#commands').sortable({
      cancel: ".ui-state-disabled"
    });
    $.fn.editableform.buttons = <%= render('commands/buttons').inspect.html_safe %>;

    $('#commands pre.local').editable({
      mode: 'inline',
      send: 'always',
      toggle: 'dblclick',
      highlight: false,
      params: function(params) {
        return { command: { command: params.value } };
      },
      ajaxOptions: {
        type: 'PATCH',
        dataType: 'json'
      }
    });

    $('#commands pre.global').dblclick(function(){
      var $warning = $('<div class="cannot-edit">Global commands cannot be edited inline, use the Admin UI.</div>')
      $(this).after($warning);
      $warning.fadeOut(3000);
      return false;
    });

    $('#commands').on('click', '.editable-destroy', function(event) {
      var editable = $(this).closest('div.col-lg-8').children('.pre-command');

      if(confirm('Are you sure you would like to remove this command from all stages?')) {
        $.ajax({
          method: 'DELETE',
          dataType: 'json',
          url: editable.data('url'),
          success: function() {
            editable.closest('.row').fadeOut();
          }
        });
      }

      event.preventDefault();
    });
  });
</script>
