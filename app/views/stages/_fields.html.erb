<fieldset>
  <div class="form-group">
    <%= form.label :name, "Name", class: "col-lg-2 control-label" %>
    <div class="col-lg-4">
      <%= form.text_field :name, class: "form-control" %>
    </div>
  </div>

  <% if form.object.persisted? %>
    <div class="form-group">
      <%= form.label :permalink, "Permalink", class: "col-lg-2 control-label" %>
      <div class="col-lg-4">
        <%= form.text_field :permalink, class: "form-control" %>
      </div>
    </div>
  <% end %>

  <div class="form-group">
    <%= form.label :notify_email_address, "Email addresses", class: "col-lg-2 control-label" %>
    <div class="col-lg-4">
      <%= form.text_field :notify_email_address, class: "form-control" %>
      <span class="help-block">Enter the email addresses that should be notified of new deploys, separated by <code>;</code></span>
    </div>
  </div>

  <% if DeployGroup.enabled? %>
    <div class="form-group">
      <%= form.label :name, 'Deploy Groups', class: 'col-lg-2 control-label' %>
      <div class=<%= "col-lg-#{2 + @environments.count}" %> >
        <% if @environments.count > 0 %>
          <%= hidden_field_tag "stage[deploy_group_ids][]" %>
          <table class="table table-condensed text-left deploy-groups">
            <thead>
              <tr>
                <% @environments.each do |environment| %>
                  <th>
                    <%= label_tag do %>
                      <%= check_box_tag('', nil, false, { id: "#{environment.name}_checkbox", class: "env-toggle-all", data: {target: ".#{environment.name}_checkbox" } }) %>
                      <%= environment.name %>
                    <% end %>
                  </th>
                <% end %>
              </tr>
            </thead>
            <tbody>
              <% @environments.map {|e| e.deploy_groups.count }.max.to_i.times do |index| %>
                <tr>
                  <% @environments.each do |environment| %>
                    <% if environment.deploy_groups[index] %>
                      <td>
                        <%= label_tag do %>
                          <%= check_box_tag(
                            "stage[deploy_group_ids][]",
                            environment.deploy_groups[index].id,
                            (@stage && @stage.deploy_group_ids.include?(environment.deploy_groups[index].id)),
                            class: "#{environment.name}_checkbox"
                            )
                          %>
                          <%= environment.deploy_groups[index].name %>
                        <% end %>
                      </td>
                    <% else %>
                      <td></td>
                    <% end %>
                  <% end %>
                </tr>
              <% end %>
            </tbody>
          </table>
        <% else %>
          <p>-- No Deploy Groups configured --</p>
        <% end %>
      </div>
    </div>
  <% else %>
    <div class="form-group">
      <div class="col-sm-offset-2 col-sm-10">
        <div class="checkbox">
          <%= form.label :production do %>
            <%= form.check_box :production %>
            Does this stage impact production servers?
          <% end %>
        </div>
      </div>
    </div>
  <% end %>

  <div class="form-group">
    <div class="col-sm-offset-2 col-sm-10">
      <div class="checkbox">
        <%= form.label :confirm do %>
          <%= form.check_box :confirm %>
          Confirm before deployment
        <% end %>
      </div>
    </div>
  </div>

  <% if @project.manage_releases? %>
    <div class="form-group">
      <div class="col-sm-offset-2 col-sm-10">
        <div class="checkbox">
          <%= form.label :deploy_on_release do %>
            <%= form.check_box :deploy_on_release %>
            Automatically deploy new releases
          <% end %>
        </div>
      </div>
    </div>
  <% end %>
</fieldset>

<fieldset>
  <legend>Commands &nbsp;<%= form.select(:command_type, Samson::JobInterpreters.instance.select_options) %></legend>

  <p>Select the commands you want to run when executing this stage. Double click to edit commands.</p>

  <div id="commands">
    <%= form.collection_check_boxes(:command_ids, form.object.all_commands, :id, :command) do |b| %>
      <div class="row stage-bar bar">
        <div data-id="<%= b.value %>" class="col-lg-offset-2 col-lg-2 command-checkbox">
          <%= b.check_box %>
        </div>
        <div class="col-lg-8">
          <pre data-type="textarea" data-url="<%= admin_command_path(b.value, format: :json) %>" class="pre-command pre-inline <%= b.object.global? ? 'global' : 'local' %>"><%= b.text %></pre>
        </div>
        <%= edit_command_link(b.object) %>
      </div>
    <% end %>
  </div>

  <hr />

  <p>Add a command which is specific to your project</p>
  <%= form.text_area :command, class: "form-control", rows: 4, value: nil, placeholder: 'cap production deploy' %>
</fieldset>

<fieldset>
  <legend>Dashboard</legend>
  <p>HTML that should be displayed on the stage page. No Javascript allowed.</p>

  <%= form.text_area :dashboard, class: "form-control", rows: 4 %>
</fieldset>

<fieldset>
  <legend>Email on automated deploy failure</legend>
  <div class="col-lg-offset-2">
    <p>When an automated deploy initially fails, send a email to:</p>

    <div class="form-group">
      <div class="col-lg-6 checkbox">
        <%= form.label :email_committers_on_automated_deploy_failure do %>
          <%= form.check_box :email_committers_on_automated_deploy_failure %>
          Committers in the diff to last successful deploy
        <% end %>
      </div>
    </div>

    <div class="form-group">
      <div class="col-lg-6">
        <p>Addresses (comma separated):</p>
        <%= form.text_field :static_emails_on_automated_deploy_failure, class: "form-control" %>
      </div>
    </div>
  </div>
</fieldset>

<%= Samson::Hooks.render_views(:stage_form, self, form: form) %>

<fieldset>
  <legend>New Relic</legend>
  <p class="col-lg-offset-2">
    Names of New Relic Applications to display during deploy
  </p>
  <%= form.fields_for :new_relic_applications do |app_fields| %>
    <div class="form-group">
      <div class="col-lg-6 col-lg-offset-2">
        <%= app_fields.text_field :name, class: "form-control", placeholder: "Application name" %>
      </div>

      <% if app_fields.object.persisted? %>
        <div class="col-lg-1 checkbox">
          <%= app_fields.check_box :_destroy if app_fields.object.persisted? %>
          <%= app_fields.label :_destroy, "Delete" %>
        </div>
      <% end %>
    </div>
  <% end %>
</fieldset>

<fieldset>
  <legend>Datadog</legend>
  <div class="col-lg-offset-2">
    <div class="form-group">
      <div class="col-lg-6">
        <%= form.text_field :datadog_tags, class: "form-control", placeholder: "Datadog tags" %>
        <span class="help-block">
          Tags that should be used on deploy events, separated by <code>;</code><br/>
          Leave empty to not send notifications.
        </span>
      </div>
    </div>

    <div class="form-group">
      <div class="col-lg-6">
        <%= form.text_field :datadog_monitor_ids, class: "form-control", placeholder: "Datadog Monitor Ids" %>
        <span class="help-block">
          Datadog monitor ids (comma separated)
        </span>
      </div>
    </div>
  </div>
</fieldset>

<fieldset>
  <legend>Github</legend>
  <div class="col-lg-6 checkbox col-lg-offset-2">
    <%= form.label :update_github_pull_requests do %>
      <%= form.check_box :update_github_pull_requests %>
      Update Pull Request after deployment
    <% end %>
  </div>
  <div class="col-lg-6 checkbox col-lg-offset-2">
    <%= form.label :use_github_deployment_api do %>
      <%= form.check_box :use_github_deployment_api %>
      Use GitHub Deployment API [beta]
    <% end %>
  </div>
</fieldset>

<script>
  $(document).ready(function() {
    $('#commands').sortable();
    $.fn.editableform.buttons = <%= render('commands/buttons').inspect.html_safe %>;

    $('#commands pre.local').editable({
      mode: 'inline',
      send: 'always',
      toggle: 'dblclick',
      highlight: false,
      params: function(params) {
        return { command: { command: params.value } };
      },
      ajaxOptions: {
        type: 'PATCH',
        dataType: 'json'
      }
    });

    $('#commands pre.global').dblclick(function(){
      var $warning = $('<div class="cannot-edit">Global commands cannot be edited inline, use the Admin UI.</div>')
      $(this).after($warning);
      $warning.fadeOut(3000);
      return false;
    });

    $('#commands').on('click', '.editable-destroy', function(event) {
      var editable = $(this).closest('div.col-lg-8').children('.pre-command');

      if(confirm('Are you sure you would like to remove this command from all stages?')) {
        $.ajax({
          method: 'DELETE',
          dataType: 'json',
          url: editable.data('url'),
          success: function() {
            editable.closest('.row').fadeOut();
          }
        });
      }

      event.preventDefault();
    });
  });
</script>
